openapi: 3.0.0
info:
  title: Example API
  version: 1.0.0
paths:
  /users:
    get:
      summary: Retrieve a collection of users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
    post:
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                group:
                  type: string
                  nullable: true
              required:
                - email
      responses:
        '201':
          description: User created successfully. Returns the Id of the created user.
          content:
            text/plain:
              schema:
                type: string
                format: uuid

  /users/{id}:
    get:
      summary: Retrieve details of a specific user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /groups:
    get:
      summary: Retrieve a collection of groups
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
    post:
      summary: Create a new group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                groupname:
                  type: string
              required:
                - groupname
      responses:
        '201':
          description: Group created successfully

  /groups/{groupname}:
    get:
      summary: Retrieve details of a specific group
      parameters:
        - in: path
          name: groupname
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCollection'
    post:
      summary: Add a member to a group
      parameters:
        - in: path
          name: groupname
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Member added successfully

  /groups/{groupname}/addMember:
    post:
      summary: Add a member to a group
      parameters:
        - in: path
          name: groupname
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Member added successfully

  /groups/{groupname}/reports:
    get:
      summary: Retrieve reports associated with a specific group
      parameters:
        - in: path
          name: groupname
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'

  /reports:
    get:
      summary: Retrieve a list of reports
      parameters:
        - in: query
          name: groupname
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
    post:
      summary: Create a new report
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user:
                  type: string
                message:
                  type: string
                  nullable: true
                image:
                  type: string
                  format: binary
                  nullable: true
              required:
                - user
      responses:
        '201':
          description: Report created successfully. Returns the id of the report.
          content:
            text/plain:
              schema:
                type: string
                format: uuid

  /reports/{reportId}:
    get:
      summary: Retrieve details of a specific report
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

  /images/{id}:
    get:
      summary: Retrieve binary data for an image
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            image/*:
              schema:
                type: string
                format: binary

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        group:
          type: string
          nullable: true
    Group:
      type: object
      properties:
        name:
          type: string
        members:
          type: array
          items:
            type: string
    Report:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
          nullable: true
        imageId:
          type: string
          nullable: true
        sentAt:
          type: string
        from:
          type: string
        group:
          type: string
    UserCollection:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        paginationKey:
          type: string
          nullable: true
    GroupCollection:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        paginationKey:
          type: string
          nullable: true
    ReportCollection:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Report'
        paginationKey:
          type: string
          nullable: true
